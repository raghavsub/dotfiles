#########################
# FUNCTIONS AND CLASSES #
#########################

global !p

class Param(object):
	"""A wrapper for a function parameter."""

	def __init__(self, param):
		self._param = param

	@property
	def param(self):
		return self._param

	def name(self):
		return self.param.split('=')[0].strip()


def parse_params(paramlist):
	return [Param(param) for param in paramlist.split(',') if param != 'self']


def add_params_to_docstring(params, snip):
	if params:
		snip.rv += '\n'
		for param in params:
			snip += ':param {}:'.format(param.name())


def write_super_initializer(classname, supername, snip):
	if supername != 'object':
		snip += 'super({}, self).__init__()'.format(classname)


def write_class_vars(params, snip):
	for param in params:
		snip += 'self._{} = {}'.format(param.name(), param.name())


def write_properties(params, snip):
	for i, param in enumerate(params):
		snip += '@property'
		snip += 'def {}(self):'.format(param.name())
		snip >> 1
		snip += 'return self._{}'.format(param.name())
		if i < len(params) - 1:
			snip.rv += '\n'
		snip << 1

endglobal

snippet class "New-style class" b
class ${1:ClassName}(${2:object}):
	"""
	${3:Docstring.}`!p
snip >> 1
add_params_to_docstring(parse_params(t[4]), snip)`
	"""

	def __init__(${4:self}):`!p
snip >> 2
write_super_initializer(t[1], t[2], snip)
write_class_vars(parse_params(t[4]), snip)
`
		$0
`!p
snip >> 1
write_properties(parse_params(t[4]), snip)
`
endsnippet

snippet def "Function" b
def ${1:function_name}($2):
	"""
	${3:Docstring.}`!p
snip >> 1
add_params_to_docstring(parse_params(t[2]), snip)`
	:return:
	"""
	$0
endsnippet

###########
# SCRIPTS #
###########

snippet #! "Script shebang" b
#! /usr/bin/env python
endsnippet

snippet ifmain "Script entrypoint" b
if __name__ == '__main__':
	${1:${VISUAL:main()}}
endsnippet

##############
# UNIT TESTS #
##############

snippet testcase "Test case" b
class ${1:TestCaseName}(unittest.TestCase):

	def setUp(self):
		${4:pass}

	def tearDown(self):
		${5:pass}

	def test_${6:test_name}(self):
		${7:${VISUAL:pass}}
endsnippet
